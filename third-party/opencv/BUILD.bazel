load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

exports_files([
    "cmake.OpenCVUtils.cmake.patch",
    "modules.dnn.src.layers.elementwise_layers.cpp.patch",
])

_OPENCV_CACHE = {
    "BUILD_OPENJPEG": "OFF",
    "BUILD_PNG": "OFF",
    "BUILD_OPENEXR": "OFF",
    "BUILD_WEBP": "OFF",
    "BUILD_TBB": "OFF",
    "BUILD_IPP_IW": "OFF",
    "BUILD_ITT": "OFF",
    "WITH_AVFOUNDATION": "OFF",
    "WITH_CAP_IOS": "OFF",
    "WITH_CAROTENE": "OFF",
    "WITH_CPUFEATURES": "OFF",
    "WITH_EIGEN": "OFF",
    "WITH_GSTREAMER": "OFF",
    "WITH_GTK": "OFF",
    "WITH_HALIDE": "OFF",
    "WITH_VULKAN": "OFF",
    "WITH_INF_ENGINE": "OFF",
    "WITH_NGRAPH": "OFF",
    "WITH_JASPER": "OFF",
    "WITH_OPENJPEG": "OFF",
    "WITH_JPEG": "OFF",
    "WITH_WEBP": "OFF",
    "WITH_PNG": "OFF",
    "WITH_TIFF": "OFF",
    "WITH_OPENVX": "OFF",
    "WITH_GDCM": "OFF",
    "WITH_HPX": "OFF",
    "WITH_OPENMP": "ON",
    "WITH_PTHREADS_PF": "OFF",
    "WITH_V4L": "OFF",
    "WITH_CLP": "OFF",
    "WITH_OPENCL": "OFF",
    "WITH_OPENCL_SVM": "OFF",
    "WITH_VA": "OFF",
    "WITH_VA_INTEL": "OFF",
    "WITH_ITT": "OFF",
    "WITH_PROTOBUF": "ON",
    "BUILD_PROTOBUF": "OFF",
    "WITH_IMGCODEC_HDR": "OFF",
    "WITH_IMGCODEC_SUNRASTER": "OFF",
    "WITH_IMGCODEC_PXM": "OFF",
    "WITH_IMGCODEC_PFM": "OFF",
    "WITH_QUIRC": "OFF",
    "WITH_ANDROID_MEDIANDK": "OFF",
    "WITH_TENGINE": "OFF",
    "WITH_TIMVX": "OFF",
    "WITH_OBSENSOR": "OFF",
    "WITH_CANN": "OFF",
    "WITH_FLATBUFFERS": "OFF",
    "BUILD_ANDROID_PROJECTS": "OFF",
    "BUILD_ANDROID_EXAMPLES": "OFF",
    "BUILD_DOCS": "OFF",
    "BUILD_PACKAGE": "OFF",
    "BUILD_WITH_STATIC_CRT": "OFF",
    "BUILD_FAT_JAVA_LIB": "OFF",
    "BUILD_ANDROID_SERVICE": "OFF",
    "BUILD_JAVA": "OFF",
    "BUILD_OBJC": "OFF",
    "ENABLE_PRECOMPILED_HEADERS": "OFF",
    "ENABLE_FAST_MATH": "ON",
    "CV_TRACE": "OFF",
    "BUILD_opencv_java": "OFF",
    "BUILD_opencv_objc": "OFF",
    "BUILD_opencv_js": "OFF",
    "BUILD_opencv_ts": "OFF",
    "BUILD_opencv_python2": "OFF",
    "BUILD_opencv_python3": "OFF",
    "BUILD_opencv_flann": "ON",
    "BUILD_opencv_stitching": "OFF",
    "BUILD_opencv_ml": "OFF",
    "BUILD_SHARED_LIBS": "OFF",
    "BUILD_STATIC_LIBS": "ON",
    "BUILD_opencv_dnn": "ON",
    "BUILD_opencv_imgcodecs": "OFF",
    "BUILD_opencv_videoio": "OFF",
    "BUILD_opencv_objdetect": "ON",
    "BUILD_opencv_calib3d": "ON",
    "BUILD_opencv_photo": "ON",
    "BUILD_LIST": "core,highgui,photo,dnn,imgproc,video,calib3d,features2d,flann,objdetect",
    "WITH_IPP": "OFF",
    "BUILD_TESTS": "OFF",
    "BUILD_opencv_apps": "OFF",
    "BUILD_PERF_TESTS": "OFF",
    "INSTALL_PYTHON_EXAMPLES": "OFF",
    "INSTALL_C_EXAMPLES": "OFF",
    "BUILD_NEW_PYTHON_SUPPORT": "OFF",
    "BUILD_opencv_java_bindings_gen": "OFF",
    "BUILD_opencv_python_tests": "OFF",
    # 可能会出错
    "WITH_ADE": "OFF",
    "WITH_TBB": "OFF",
    "BUILD_EXAMPLES": "OFF",
    "BUILD_ZLIB": "OFF",
    "BUILD_JASPER": "OFF",
    "BUILD_JPEG": "ON",
    "BUILD_opencv_gapi": "OFF",
    "BUILD_TIFF": "OFF",
    "CMAKE_BUILD_TYPE": "RELEASE",
    "CMAKE_PREFIX_PATH": "$$EXT_BUILD_DEPS$$/zlib;$$EXT_BUILD_DEPS$$/protobuf",
}

cmake(
    name = "opencv-build",
    build_args = ["-j6"],
    cache_entries = select({
        "//conditions:default": dict(_OPENCV_CACHE.items() + {
            "WITH_OPENEXR": "OFF",
            "WITH_FFMPEG": "OFF",
        }.items()),
    }),
    copts = [
        "-std=c++11",
    ],
    generate_crosstool_file = True,
    lib_source = select({
        "//conditions:default": "@opencv_src//:all",
    }),
    linkopts = select({
        "//conditions:default": [
            "-std=c++11",
            "-lstdc++",
        ],
    }),
    out_include_dir = select({
        "//conditions:default": "include/opencv4",
    }),
    out_static_libs = select({
        "//conditions:default": [
            "libopencv_objdetect.a",
            "libopencv_calib3d.a",
            "libopencv_photo.a",
            "libopencv_features2d.a",
            "libopencv_dnn.a",
            "libopencv_highgui.a",
            "libopencv_imgproc.a",
            "libopencv_video.a",
            "libopencv_core.a",
            "libopencv_flann.a",
        ],
    }),
    tags = ["cache"],
    target_compatible_with = select({
        "//conditions:default": [],
    }),
    deps = [
        "//third-party/protobuf",
        "//third-party/zlib",
    ],
)

cc_library(
    name = "opencv",
    linkopts = [],
    visibility = ["//visibility:public"],
    deps = [
        ":opencv-build",
        "//third-party/protobuf",
    ],
)
